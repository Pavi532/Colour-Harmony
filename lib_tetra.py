# -*- coding: utf-8 -*-
"""Lib_Tetra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p5Kn0iqAOJuGhAUdfn-kohLQp8BqdcLJ
"""

import matplotlib.pyplot as plt
import numpy as np
import cv2
import math
from lib_color_conv import *

def MatchTetra(Color):
  #Converting RGB values in to HSV
  Color1_HSV = rgb_to_hsv(Color)
  #Color 1 from Tetra
  H_1 = abs((Color1_HSV[0]+90)%360)
  HSV_C1 = list(Color1_HSV)
  HSV_C1[0] = H_1

  #Color 2 from Tetra
  H_2 = abs((Color1_HSV[0]-180)%360)
  HSV_C2 = list(Color1_HSV)
  HSV_C2[0] = H_2

  #Color 3 from Tetra
  H_3 = abs((HSV_C1[0]-180)%360)
  HSV_C3 = list(Color1_HSV)
  HSV_C3[0] = H_3

  HSV_B = list(Color1_HSV)

  Base_RGB = hsv_to_rgb(HSV_B)
  Tetra1_RGB = hsv_to_rgb(HSV_C1)
  Tetra2_RGB = hsv_to_rgb(HSV_C2)
  Tetra3_RGB = hsv_to_rgb(HSV_C3)

  Palette = []
  Palette.append(Base_RGB)
  Palette.append(Tetra1_RGB)
  Palette.append(Tetra2_RGB)
  Palette.append(Tetra3_RGB)

  chart = np.zeros((50, 400, 3), dtype = "uint8")
  start = 0

  for i in range(len(Palette)):
    end = start + 100
    r = Palette[i][0]
    g = Palette[i][1]
    b = Palette[i][2]
    cv2.rectangle(chart, (int(start), 0), (int(end), 50), (r,g,b), -1)
    start = end	

  plt.figure()
  plt.axis("off")
  plt.imshow(chart)
  plt.show()

  return Palette